block('rating') (
    tag()('span'),
    js()(true),
    attrs()({
        name : this.ctx.name
    }),
    content()(function() {
        var ctx = this.ctx,
            points = +ctx.points,
            rates = [],
            layerWidth = 0,
            sumWidth = (function() {
                var width,
                    empty = true;

                return function(points, step) {
                    if((points ^ 0) === points && points <= step) {
                        width = 16;
                        empty = false;
                    }

                    if(empty && step < points && step + 1 > points) {
                        width = +(points % 1).toFixed(6) * 16;
                        empty = false;
                    } else {
                        empty? width = 16 : width = 0;
                    }

                    return width;
                };
            })();

        if(ctx.length && +ctx.length > 0) {
            for(var i = 0, len = ctx.length; i < len; i++) {
                layerWidth += sumWidth(points, i);

                rates.push(
                     {
                        elem : 'input',
                        attrs : {
                            id : this.generateId() + i,
                            name : ctx.name
                        }
                    },
                    {
                        elem : 'label',
                        attrs : {
                            for : this.generateId() + i
                        }
                    }
                );
            }

            rates.push({
                elem : 'labelCut',
                attrs : { style : 'width: ' + layerWidth + 'px;' }
            });

            return rates;

        } else {
            rates = ctx.content.map(function(rate, i) {
                layerWidth += sumWidth(points, i);

                return [
                    {
                        elem : 'input',
                        attrs : {
                            id : this.generateId() + i,
                            name : ctx.name
                        }
                    },
                    {
                        elem : rate.elemName,
                        attrs : {
                            for : this.generateId() + i,
                            title : rate.content
                        }
                    }
                ];
            }, this);

            rates.push({
                elem : 'labelCut',
                attrs : { style : 'width: ' + layerWidth + 'px;' }
            });

            return rates;
        }
    })
);
